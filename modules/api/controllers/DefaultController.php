<?php

namespace app\modules\api\controllers;

use Yii;
use app\models\User;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBasicAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\auth\QueryParamAuth;
use yii\rest\Controller;
use yii\web\ForbiddenHttpException;

/**
 * Default controller for the `api` module
 */
class DefaultController extends Controller
{
    public function behaviors()
    {
        $behaviors = parent::behaviors();
//        $behaviors['authenticator']['class'] = HttpBasicAuth::className();
        $behaviors['authenticator']['class'] = CompositeAuth::className();
        $behaviors['authenticator']['only'] = ['index'];
        $behaviors['authenticator']['authMethods'] = [
            [
                'class' =>  HttpBasicAuth::className(),
                'auth' => function ($username, $password) {
                    $u = User::findOne([
                        'username' => $username,
                    ]);
                    return (Yii::$app->security->validatePassword($password, $u->password_hash)) ? $u : null;
                }
            ],
            'class' => HttpBearerAuth::className(),
            [
                'class' => QueryParamAuth::className(),
                'tokenParam' => 'access_token'
            ]
        ];
        return $behaviors;
    }

    public function beforeAction($action)
    {
        \Yii::$app->user->enableSession = false;
        \Yii::$app->user->enableAutoLogin = false;
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex() {
        if (Yii::$app->user->isGuest) {
            throw new  ForbiddenHttpException('Вы не авторитизированы.');
        }
        $result = [
            'access_token' => Yii::$app->user->identity->access_token,
            'id' => Yii::$app->user->id,
            'roles' => \Yii::$app->authManager->getRolesByUser(Yii::$app->user->id),
        ];
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        return $result;
    }

}
